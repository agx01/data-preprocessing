#Data Preprocessing
#Importing the dataset
dataset = read.csv('C:/Work/Udemy Courses/Machine Learning A-Z/My Code/data-preprocessing/Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
View(dataset)
View(dataset)
View(dataset)
#Data Preprocessing
#Importing the dataset
dataset = read.csv('C:/Work/Udemy Courses/Machine Learning A-Z/My Code/data-preprocessing/Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
#Encoding Categorical Data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Country,
levels = c('No', 'Yes'),
labels = c(0, 1))
View(dataset)
View(dataset)
#Data Preprocessing
#Importing the dataset
dataset = read.csv('C:/Work/Udemy Courses/Machine Learning A-Z/My Code/data-preprocessing/Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
#Encoding Categorical Data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
View(dataset)
install.packages("caTools")
library("datasets", lib.loc="C:/R-3.4.3/library")
library("caTools", lib.loc="C:/R-3.4.3/library")
#Splitting the dataset into train set and test set
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(test_set)
View(dataset)
View(dataset)
#Feature Scaling
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
View(training_set)
View(test_set)
